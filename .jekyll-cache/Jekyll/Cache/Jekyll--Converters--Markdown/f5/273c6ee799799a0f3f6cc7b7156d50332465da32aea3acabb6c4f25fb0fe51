I"—<p>Recently Iâ€™ve been working in backend which connects to another API, you may need to send a specific format of JSON data which is not the same as database resource.</p>

<h2 id="create-a-serializable-resource">Create A Serializable Resource</h2>
<p>Currently Iâ€™m using <a href="https://github.com/rails-api/active_model_serializers/tree/0-10-stable">active_model_serializers 0.10.0</a>. From the documentation we know <code class="highlighter-rouge">ActiveModel::Serializer</code> wraps a serializable resource, to create a serializable resource we need to create a plain old Ruby object inherits <code class="highlighter-rouge">ActiveModelSerializers::Model</code>, then create a corresponding serializer.</p>

<p>For example:</p>
<div class="language-rb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">MyModel</span> <span class="o">&lt;</span> <span class="no">ActiveModelSerializers</span><span class="o">::</span><span class="no">Model</span>
  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">title</span><span class="p">:,</span> <span class="n">body</span><span class="p">:)</span>
    <span class="vi">@title</span> <span class="o">=</span> <span class="n">title</span>
    <span class="vi">@body</span> <span class="o">=</span> <span class="n">body</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">converted_body</span>
    <span class="c1"># do something</span>
  <span class="k">end</span>
<span class="k">end</span>
</code></pre></div></div>

<div class="language-rb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">MyModelSerializer</span> <span class="o">&lt;</span> <span class="no">ActiveModelSerializers</span><span class="o">::</span><span class="no">Serializer</span>
  <span class="n">attributes</span> <span class="ss">:converted_body</span>
<span class="k">end</span>
</code></pre></div></div>

<h2 id="handling-nested-json">Handling Nested JSON</h2>
<p>You can use <code class="highlighter-rouge">has_many</code>, <code class="highlighter-rouge">has_one</code> method in <code class="highlighter-rouge">ActiveModel::Serializer</code> to handle nested json, although it doesnâ€™t mean the same with Rails model relations.</p>

<p>For example:</p>
<div class="language-rb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">MyModel</span> <span class="o">&lt;</span> <span class="no">ActiveModelSerializers</span><span class="o">::</span><span class="no">Model</span>
  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="ss">object: </span><span class="n">object</span><span class="p">)</span>
    <span class="vi">@title</span> <span class="o">=</span> <span class="n">title</span>
    <span class="vi">@body</span> <span class="o">=</span> <span class="n">body</span>
  <span class="k">end</span>

  <span class="k">def</span> 

  <span class="nf">def</span> <span class="n">related_models</span>
    <span class="n">related_models</span><span class="p">.</span><span class="nf">map</span> <span class="k">do</span> <span class="o">|</span><span class="n">related_model</span><span class="o">|</span>
      <span class="no">RelatedModel</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="ss">related_model: </span><span class="n">related_model</span><span class="p">)</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
</code></pre></div></div>

<div class="language-rb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">MyModelSerializer</span> <span class="o">&lt;</span> <span class="no">ActiveModelSerializers</span><span class="o">::</span><span class="no">Serializer</span>
  <span class="n">has_many</span> <span class="ss">:related_models</span>
<span class="k">end</span>
</code></pre></div></div>
<p><code class="highlighter-rouge">ActiveModelSerializers::Serializer</code> will automatically look for a serializer named <code class="highlighter-rouge">RelatedModelSerializer</code>.</p>

<h2 id="reference">Reference</h2>
<p>Find more explainations in   https://github.com/rails-api/active_model_serializers/tree/0-10-stable#what-does-a-serializable-resource-look-like</p>

:ET