---
layout: post
title:  "排序算法概述"
date:   2020-05-31 12:25:00 +0900
comments: true
tags:
- 数据结构与算法
categories:
- 技术
---

#### 冒泡排序
<pre>
从左开始比较，大的往右换
或
从右开始比较，小的往左换
重复上一步骤
</pre>
#### 鸡尾排序
<pre>
也叫双向冒泡或者定向冒泡，
从左开始比较，大的往右换
与
从右开始比较，小的往左换
同时进行
</pre>
#### 选择排序
<pre>
与冒泡排序相比减少了多余的交换
找出最小的元素放在最左侧，接着找第二小的...直到最后排完(不稳定)
</pre>
#### 快速排序
<pre>
选中一个基准元素X，小于X放在左侧，大于X放在右侧，分而治之，不断重复
</pre>
#### 插入排序
<pre>
从左侧开始设定一个有序区，从第二个元素开始去有序找自己的位置插入进去
</pre>
#### 希尔排序
<pre>
两两分组，跨度交换，左小右大，逐渐缩小跨度为1，即完成排序
</pre>
#### 归并排序(比武排序)
<pre>
由一组数字分为两组，逐渐分为只包含2个元素的小组
开始比较大小，左小右大
比较完毕之后，开始合并，合并的时候按照小大顺序把2个小组合并成1个有序大组，直到最后1个最大有序组
</pre>
#### 计数排序
<pre>
建立【元素都为0】的空数组，开始遍历待排序数组
如果待排元素值等于空数组的位置角标，则【元素+1】
</pre>
#### 桶排序
<pre>
计数排序的升级版，计数排序每个索引只能记录一个值，
索引升级为桶（比如桶范围2.0-3.5）
此时，一个桶里就可以放多个数据范围内的数据
</pre>
#### 基数排序（按位排序）
<pre>
提取每个元素的最后一位进行计数排序
再提取倒数第二位进行计数排序
直到最前一位
比如：单词排序，长度不一的末尾用0代替
</pre>
#### 堆排序
<pre>
主要利用二叉堆是完全二叉堆这样的数据结构的特性
把无序数组构建成二叉堆。
循环删除堆顶元素，移到集合尾部，调节堆产生新的堆顶。
</pre>

参考 <https://mp.weixin.qq.com/s/teOGQlslb6aP4AQrx7TTzA>